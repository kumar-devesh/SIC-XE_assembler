COPY START 0
FIRST STL RETADR 
CLOOP JSUB RDREC    . READ INPUT RECORD
    LDA LENGTH      . TEST FOR EOF 
    COMP #0
    JEQ ENDFIL      . EXIT IF EOF FOUND
    JSUB WRREC      . WRITE OUTPUT RECORD
    J CLOOP         . LOOP
.
ENDFIL LDA =C'EOF'
    STA BUFFER
    LDA #3          . INCREMENT BY 3
    STA LENGTH
    JSUB WRREC      . WRITE EOF
    J @RETADR       . RETURN TO CALLER (OS)
.
    USE CDATA
RETADR RESW 1
LENGTH RESW 1
    USE CBLKS
BUFFER RESB 4096    . BUFFER AREA
BUFEND EQU *
MAXLEN EQU BUFEND-BUFFER 
.
. SUBROUTINE TO READ RECORD INTO BUFFER
.
    USE
RDREC CLEAR X       . CLEAR LOOP COUNTER
    CLEAR A         . CLEAR A, S TO ZERO
    CLEAR S
    +LDT #MAXLEN
.
RLOOP TD INPUT      . TEST INPUT DEVICE
    JEQ RLOOP
    RD INPUT        . READ CHARACTER INTO REGISTER A
    COMPR A,S
    JEQ EXIT        . EXIT LOOP IF END OF RECORD
    STCH BUFFER,X  . STORE CHARACTER IN BUFFER
    TIXR T 
    JLT RLOOP
EXIT STX LENGTH
    RSUB
.
    USE CDATA
INPUT BYTE X'F1'
.
. SUBROUTINE TO WRITE RECORD FROM BUFFER
.
    USE
WRREC CLEAR X       . CLEAR LOOP COUNTER
    LDT LENGTH
WLOOP TD =X'05'     . TEST OUTPUT DEVICE
    JEQ WLOOP
    LDCH BUFFER,X
    WD =X'05'
    TIXR T
    JLT WLOOP 
    RSUB 
.
    USE CDATA
    LTORG
    END FIRST
. Figure 2.11 chapter 2 (PROGRAM BLOCKS)
